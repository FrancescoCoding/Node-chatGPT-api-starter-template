import{_ as e,c as a,o as s,a as t}from"./app.267a8067.js";const _=JSON.parse('{"title":"<<EasyGPT>>.addResponse()","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]}],"relativePath":"reference/addResponse.md"}'),n={name:"reference/addResponse.md"},r=t(`<h1 id="easygpt-addresponse" tabindex="-1">&lt;&lt;EasyGPT&gt;&gt;.addResponse() <a class="header-anchor" href="#easygpt-addresponse" aria-hidden="true">#</a></h1><p>Manually add a response from ChatGPT.</p><p>To achieve this easyGPT adds a message with the role of &quot;assistant&quot; to the stack.</p><blockquote><p>The assistant messages help store prior responses. They can also be written by a developer to help give examples of desired behavior. - <a href="https://platform.openai.com/docs/guides/chat/introduction" target="_blank" rel="noreferrer">Chat completion - OpenAI API</a></p></blockquote><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">instance</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addResponse</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">My name is Bender Bending Rodr√≠guez.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h2><table><thead><tr><th>PARAMETER</th><th>TYPE</th><th>Default</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>content</td><td>String</td><td>N/A</td><td>The response you wish to plant.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h2><p>EasyGPT instance (&lt;&lt;EasyGPT&gt;&gt;)</p>`,10),o=[r];function l(d,p,i,c,h,u){return s(),a("div",null,o)}const y=e(n,[["render",l]]);export{_ as __pageData,y as default};
